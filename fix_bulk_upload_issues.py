#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å bulk upload
"""

import os
import sys
import django
from pathlib import Path

# Add project root to Python path
project_root = Path(__file__).resolve().parent
sys.path.insert(0, str(project_root))

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'instagram_uploader.settings')
django.setup()

from uploader.models import BulkUploadTask, BulkUploadAccount
from django.utils import timezone
import logging

# Use centralized logging - all logs go to django.log
logger = logging.getLogger('scripts.fix_bulk_upload_issues')

def check_bulk_upload_issues():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å bulk upload"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å bulk upload...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
    active_tasks = BulkUploadTask.objects.filter(status='RUNNING')
    if active_tasks.exists():
        print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {active_tasks.count()} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á:")
        for task in active_tasks:
            print(f"   - –ó–∞–¥–∞—á–∞ {task.id}: {task.name}")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ PENDING –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
            task.status = 'PENDING'
            task.log += f"\n[{timezone.now()}] [AUTO_FIX] –°–±—Ä–æ—à–µ–Ω —Å—Ç–∞—Ç—É—Å —Å RUNNING –Ω–∞ PENDING –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
            task.save()
            print(f"     ‚úÖ –°—Ç–∞—Ç—É—Å —Å–±—Ä–æ—à–µ–Ω –Ω–∞ PENDING")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    stuck_accounts = BulkUploadAccount.objects.filter(status='RUNNING')
    if stuck_accounts.exists():
        print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {stuck_accounts.count()} –∑–∞–≤–∏—Å—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:")
        for account in stuck_accounts:
            print(f"   - –ê–∫–∫–∞—É–Ω—Ç {account.id}: {account.account.username}")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ PENDING
            account.status = 'PENDING'
            account.save()
            print(f"     ‚úÖ –°—Ç–∞—Ç—É—Å —Å–±—Ä–æ—à–µ–Ω –Ω–∞ PENDING")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏ —Å –æ—à–∏–±–∫–∞–º–∏
    failed_tasks = BulkUploadTask.objects.filter(status='FAILED')
    if failed_tasks.exists():
        print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ {failed_tasks.count()} –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–¥–∞—á:")
        for task in failed_tasks:
            print(f"   - –ó–∞–¥–∞—á–∞ {task.id}: {task.name}")
            print(f"     –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {task.log[-200:] if task.log else '–ù–µ—Ç –ª–æ–≥–æ–≤'}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    required_env_vars = [
        'DOLPHIN_API_TOKEN',
        'DOLPHIN_API_HOST',
        'SECRET_KEY',
        'ALLOWED_HOSTS'
    ]
    
    missing_vars = []
    for var in required_env_vars:
        if not os.environ.get(var):
            missing_vars.append(var)
    
    if missing_vars:
        print(f"‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
    else:
        print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    # 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Dolphin Anty –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫")
    print("5. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–º–µ–Ω—å—à–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    
    print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

def fix_common_issues():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"""
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º...")
    
    # 1. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–≤–∏—Å—à–∏–µ –∑–∞–¥–∞—á–∏
    stuck_tasks = BulkUploadTask.objects.filter(status='RUNNING')
    for task in stuck_tasks:
        task.status = 'PENDING'
        task.log += f"\n[{timezone.now()}] [AUTO_FIX] –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–±—Ä–æ—Å –∑–∞–≤–∏—Å—à–µ–π –∑–∞–¥–∞—á–∏"
        task.save()
        print(f"‚úÖ –°–±—Ä–æ—à–µ–Ω–∞ –∑–∞–¥–∞—á–∞ {task.id}: {task.name}")
    
    # 2. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–≤–∏—Å—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    stuck_accounts = BulkUploadAccount.objects.filter(status='RUNNING')
    for account in stuck_accounts:
        account.status = 'PENDING'
        account.save()
        print(f"‚úÖ –°–±—Ä–æ—à–µ–Ω –∞–∫–∫–∞—É–Ω—Ç {account.id}: {account.account.username}")
    
    # 3. –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å–∏–º–≤–æ–ª–æ–≤)
    tasks_with_long_logs = BulkUploadTask.objects.filter(log__length__gt=1000)
    for task in tasks_with_long_logs:
        task.log = task.log[-1000:] + f"\n[{timezone.now()}] [AUTO_FIX] –õ–æ–≥ –æ–±—Ä–µ–∑–∞–Ω –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞"
        task.save()
        print(f"‚úÖ –û–±—Ä–µ–∑–∞–Ω –ª–æ–≥ –¥–ª—è –∑–∞–¥–∞—á–∏ {task.id}")
    
    print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!")

if __name__ == "__main__":
    print("üöÄ –°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è bulk upload")
    print("=" * 50)
    
    try:
        check_bulk_upload_issues()
        print("\n" + "=" * 50)
        fix_common_issues()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    
    print("\nüéâ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
