# Generated by Django 5.1.5 on 2025-10-06 15:56

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cabinet', '0005_calculationhistory_client_name'),
        ('uploader', '0032_remove_dolphincookierobottask_account_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClientAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_network', models.CharField(choices=[('INSTAGRAM', 'Instagram'), ('YOUTUBE', 'YouTube'), ('TIKTOK', 'TikTok')], help_text='Social network platform', max_length=20)),
                ('total_posts', models.IntegerField(default=0, help_text='Total number of posts/videos')),
                ('total_views', models.BigIntegerField(default=0, help_text='Total views across all posts')),
                ('total_likes', models.BigIntegerField(default=0, help_text='Total likes across all posts')),
                ('total_comments', models.BigIntegerField(default=0, help_text='Total comments across all posts')),
                ('total_shares', models.BigIntegerField(default=0, help_text='Total shares/reposts')),
                ('total_followers', models.BigIntegerField(default=0, help_text='Current follower count')),
                ('average_views', models.FloatField(default=0.0, help_text='Average views per post')),
                ('engagement_rate', models.FloatField(default=0.0, help_text='Engagement rate (likes+comments+shares)/views')),
                ('growth_rate', models.FloatField(default=0.0, help_text='Follower growth rate (%)')),
                ('instagram_stories_views', models.BigIntegerField(default=0, help_text='Instagram stories views')),
                ('instagram_reels_views', models.BigIntegerField(default=0, help_text='Instagram reels views')),
                ('youtube_subscribers', models.BigIntegerField(default=0, help_text='YouTube subscribers')),
                ('youtube_watch_time', models.BigIntegerField(default=0, help_text='YouTube watch time (minutes)')),
                ('tiktok_video_views', models.BigIntegerField(default=0, help_text='TikTok video views')),
                ('tiktok_profile_views', models.BigIntegerField(default=0, help_text='TikTok profile views')),
                ('period_start', models.DateField(help_text='Start date of analytics period')),
                ('period_end', models.DateField(help_text='End date of analytics period')),
                ('notes', models.TextField(blank=True, default='', help_text='Additional notes about the analytics')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(help_text='Client for whom analytics are recorded', on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='cabinet.client')),
                ('created_by', models.ForeignKey(blank=True, help_text='Admin user who created this analytics entry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client Analytics',
                'verbose_name_plural': 'Client Analytics',
                'indexes': [models.Index(fields=['client', 'social_network', 'period_start'], name='uploader_cl_client__6a9ebb_idx'), models.Index(fields=['social_network', 'period_start'], name='uploader_cl_social__60d989_idx')],
                'unique_together': {('client', 'social_network', 'period_start', 'period_end')},
            },
        ),
    ]
