from instagrapi import Client
from instagrapi.exceptions import (
    LoginRequired,
    ChallengeRequired,
    TwoFactorRequired,
    PleaseWaitFewMinutes,
    RecaptchaChallengeForm
)
from instagrapi.mixins.challenge import ChallengeChoice
import os
import time
import random
import json
import logging
import requests
import re
import base64
from datetime import datetime
from pathlib import Path

# Use centralized logging - all logs go to django.log
logger = logging.getLogger('instgrapi_func.bio_manager')

class AccountParser:
    """–ü–∞—Ä—Å–µ—Ä —Å—Ç—Ä–æ–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π)"""
    
    @staticmethod
    def parse_account_string(account_string: str) -> dict:
        """–ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞"""
        try:
            logger.info("üîß –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞...")
            
            line = account_string.strip()
            if not line or '||' not in line:
                raise ValueError(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–æ–∫–∏: {line}")
            
            # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ auth_part||data_part
            auth_part, data_part = line.split('||', 1)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏ password
            if ':' in auth_part:
                username, password = auth_part.split(':', 1)
            else:
                username = auth_part
                password = ""
            
            # –†–∞–∑–¥–µ–ª—è–µ–º device_info –∏ cookies_part
            parts = data_part.split('|')
            device_info = parts[0] if len(parts) > 0 else ""
            cookies_part = '|'.join(parts[1:]) if len(parts) > 1 else ""
            
            # –ü–∞—Ä—Å–∏–º device_info
            device_parts = device_info.split(';')
            android_device_id = device_parts[0] if len(device_parts) > 0 else ""
            uuid_main = device_parts[1] if len(device_parts) > 1 else ""
            phone_id = device_parts[2] if len(device_parts) > 2 else ""
            client_session_id = device_parts[3] if len(device_parts) > 3 else ""
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ cookies
            sessionid_match = re.search(r'sessionid=([^;]+)', cookies_part)
            sessionid = sessionid_match.group(1) if sessionid_match else ""
            
            user_id_match = re.search(r'ds_user_id=(\d+)', cookies_part)
            user_id = user_id_match.group(1) if user_id_match else ""
            
            mid_match = re.search(r'mid=([^;]+)', cookies_part)
            mid = mid_match.group(1) if mid_match else ""
            
            result = {
                'username': username,
                'password': password,
                'uuid': uuid_main,
                'android_device_id': android_device_id,
                'phone_id': phone_id,
                'client_session_id': client_session_id,
                'sessionid': sessionid,
                'ds_user_id': user_id,
                'mid': mid,
                'valid': bool(username and password)
            }
            
            logger.info("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ:")
            logger.info(f"   Username: {result['username']}")
            logger.info(f"   Valid: {result['valid']}")
            
            return result
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
            return {'valid': False, 'error': str(e)}

class InstagramBioManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ Instagram"""
    
    def __init__(self, account_data, proxy_url=None):
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è InstagramBioManager")
        
        self.account_data = account_data
        self.username = account_data.get('username')
        self.password = account_data.get('password')
        self.uuid = account_data.get('uuid')
        self.android_device_id = account_data.get('android_device_id')
        self.phone_id = account_data.get('phone_id')
        self.client_session_id = account_data.get('client_session_id')
        
        self.proxy_url = proxy_url
        self.session_file = f"session_{self.username}.json"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        self.client = Client()
        self.setup_device_settings()
        
        logger.info("‚úÖ InstagramBioManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def setup_device_settings(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞"""
        device_settings = {
            "cpu": "h1",
            "dpi": "640dpi",
            "model": "SM-G973F", 
            "device": "beyond1",
            "resolution": "1440x3040",
            "app_version": "269.0.0.18.75",
            "manufacturer": "samsung",
            "version_code": "314665256",
            "android_release": "10",
            "android_version": 29
        }
        
        self.client.set_device(device_settings)
        self.client.set_user_agent("Instagram 269.0.0.18.75 Android (29/10; 640dpi; 1440x3040; samsung; SM-G973F; beyond1; exynos9820; en_US; 314665256)")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        if self.uuid:
            self.client.uuid = self.uuid
            logger.info(f"üîë UUID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.uuid}")
        
        if self.android_device_id:
            self.client.android_device_id = self.android_device_id
            logger.info(f"üì± Device ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.android_device_id}")
        
        if self.phone_id:
            self.client.phone_id = self.phone_id
            logger.info(f"üìû Phone ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.phone_id}")
        
        if self.client_session_id:
            self.client.client_session_id = self.client_session_id
            logger.info(f"üì± Client Session ID —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {self.client_session_id}")
        
        self.client.set_country("US")
        self.client.set_locale("en_US")
        
        if self.proxy_url:
            self.client.set_proxy(self.proxy_url)
        
        logger.info("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    def login(self):
        """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"""
        try:
            logger.info(f"üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è @{self.username}")
            print(f"üîê –í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç @{self.username}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
            if os.path.exists(self.session_file):
                logger.info("üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é...")
                try:
                    self.client.load_settings(self.session_file)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
                    account_info = self.client.account_info()
                    logger.info("‚úÖ –°–µ—Å—Å–∏—è –≤–∞–ª–∏–¥–Ω–∞")
                    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é")
                    return True
                except Exception as e:
                    logger.warning(f"‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞: {e}")
            
            # –ù–æ–≤—ã–π –≤—Ö–æ–¥
            self.client.login(self.username, self.password)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            account_info = self.client.account_info()
            
            logger.info("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            logger.info(f"üë§ Username: {account_info.username}")
            
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {account_info.username}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
            self.client.dump_settings(self.session_file)
            logger.info("üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
            
            return True
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            return False
    
    def get_current_profile(self):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
        
        Returns:
        --------
        dict : –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        """
        try:
            logger.info("üìñ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è...")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ account_info() –∏–∑ account.py
            account_info = self.client.account_info()
            
            profile_data = {
                'username': account_info.username,
                'full_name': account_info.full_name,
                'biography': account_info.biography,
                'external_url': account_info.external_url,
                'email': account_info.email,
                'phone_number': account_info.phone_number,
                'is_private': account_info.is_private,
            }
            
            logger.info(f"üìñ –¢–µ–∫—É—â–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è: {profile_data['biography']}")
            logger.info(f"üìß Email: {profile_data['email']}")
            logger.info(f"üîó –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞: {profile_data['external_url']}")
            
            print("üìñ –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è:")
            print(f"üë§ –ò–º—è: {profile_data['full_name']}")
            print(f"üìù –ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {profile_data['biography']}")
            print(f"üîó –°—Å—ã–ª–∫–∞: {profile_data['external_url']}")
            
            return profile_data
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            return None
    
    def change_biography(self, new_biography, preserve_other_fields=True):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ —á–µ—Ä–µ–∑ –Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ account_edit()
        
        Parameters:
        -----------
        new_biography : str
            –ù–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è
        preserve_other_fields : bool
            –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è
            
        Returns:
        --------
        Account or None
        """
        try:
            logger.info("üìù –ò–∑–º–µ–Ω—è–µ–º –±–∏–æ–≥—Ä–∞—Ñ–∏—é...")
            print("üìù –ò–∑–º–µ–Ω—è–µ–º –±–∏–æ–≥—Ä–∞—Ñ–∏—é...")
            print(f"üìù –ù–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è: {new_biography}")
            
            if preserve_other_fields:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
                current_profile = self.get_current_profile()
                if not current_profile:
                    logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è")
                    return None
                
                # ‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú –ù–ê–¢–ò–í–ù–´–ô –ú–ï–¢–û–î account_edit() –∏–∑ account.py
                updated_account = self.client.account_edit(
                    username=current_profile['username'],
                    full_name=current_profile['full_name'],
                    biography=new_biography,  # ‚Üê –ù–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è
                    external_url=current_profile['external_url'] or "",
                    email=current_profile['email'] or "",
                    phone_number=current_profile['phone_number'] or ""
                )
            else:
                # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏
                updated_account = self.client.account_edit(biography=new_biography)
            
            logger.info("‚úÖ –ë–∏–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!")
            logger.info(f"üìù –ù–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è: {updated_account.biography}")
            
            print("‚úÖ –ë–∏–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!")
            print(f"üìù –ù–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è: {updated_account.biography}")
            
            return updated_account
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∏–æ–≥—Ä–∞—Ñ–∏–∏: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∏–æ–≥—Ä–∞—Ñ–∏–∏: {e}")
            return None
    
    def change_external_url(self, new_url):
        """
        –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–∏
        
        Parameters:
        -----------
        new_url : str
            –ù–æ–≤–∞—è –≤–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞
        """
        try:
            logger.info(f"üîó –ò–∑–º–µ–Ω—è–µ–º –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É –Ω–∞: {new_url}")
            print(f"üîó –ò–∑–º–µ–Ω—è–µ–º –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É –Ω–∞: {new_url}")
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ set_external_url() –∏–∑ account.py
            result = self.client.set_external_url(new_url)
            
            if result and result.get('status') == 'ok':
                logger.info("‚úÖ –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!")
                print("‚úÖ –í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!")
                return True
            else:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏: {result}")
                return False
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–∏: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–∏: {e}")
            return False
    
    def change_profile_info(self, **kwargs):
        """
        –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è
        
        Parameters:
        -----------
        **kwargs : dict
            –ü–æ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: full_name, biography, external_url, etc.
        """
        try:
            logger.info("üîß –ò–∑–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è...")
            print("üîß –ò–∑–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            current_profile = self.get_current_profile()
            if not current_profile:
                return None
            
            # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å –Ω–æ–≤—ã–º–∏
            update_data = {
                'username': current_profile['username'],
                'full_name': current_profile['full_name'],
                'biography': current_profile['biography'],
                'external_url': current_profile['external_url'] or "",
                'email': current_profile['email'] or "",
                'phone_number': current_profile['phone_number'] or ""
            }
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—è
            update_data.update(kwargs)
            
            logger.info("üìä –ò–∑–º–µ–Ω—è–µ–º—ã–µ –ø–æ–ª—è:")
            for key, value in kwargs.items():
                logger.info(f"   {key}: {value}")
                print(f"üìù {key}: {value}")
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
            updated_account = self.client.account_edit(**update_data)
            
            logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã!")
            print("‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã!")
            
            return updated_account
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {e}")
            return None
    
    def batch_biography_changes(self, biography_list, delay_range=(10, 30)):
        """
        –ü–∞–∫–µ—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–π —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
        
        Parameters:
        -----------
        biography_list : List[str]
            –°–ø–∏—Å–æ–∫ –±–∏–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        delay_range : Tuple[int, int]
            –î–∏–∞–ø–∞–∑–æ–Ω —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –º–µ–∂–¥—É –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ (—Å–µ–∫—É–Ω–¥—ã)
        """
        try:
            logger.info(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞–∫–µ—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ {len(biography_list)} –±–∏–æ–≥—Ä–∞—Ñ–∏–π")
            print(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞–∫–µ—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ {len(biography_list)} –±–∏–æ–≥—Ä–∞—Ñ–∏–π")
            
            results = []
            
            for i, bio in enumerate(biography_list, 1):
                logger.info(f"üìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ {i}/{len(biography_list)}")
                print(f"\nüìù –ò–∑–º–µ–Ω–µ–Ω–∏–µ {i}/{len(biography_list)}")
                print(f"‚û°Ô∏è –ù–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è: {bio}")
                
                # –ò–∑–º–µ–Ω—è–µ–º –±–∏–æ–≥—Ä–∞—Ñ–∏—é
                result = self.change_biography(bio)
                results.append(bool(result))
                
                if result:
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ!")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è")
                    break
                
                # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ)
                if i < len(biography_list):
                    delay = random.uniform(*delay_range)
                    logger.info(f"‚è≥ –ñ–¥–µ–º {delay:.1f} —Å–µ–∫ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º...")
                    print(f"‚è≥ –ñ–¥–µ–º {delay:.1f} —Å–µ–∫...")
                    time.sleep(delay)
            
            success_count = sum(results)
            logger.info(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {success_count}/{len(biography_list)} —É—Å–ø–µ—à–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            print(f"\nüéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {success_count}/{len(biography_list)} —É—Å–ø–µ—à–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π!")
            
            return results
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {e}")
            return []

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def create_bio_manager(account_string: str, proxy_url=None):
    """–°–æ–∑–¥–∞–µ—Ç –±–∏–æ-–º–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ —Å—Ç—Ä–æ–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞"""
    account_data = AccountParser.parse_account_string(account_string)
    if not account_data.get('valid'):
        raise ValueError(f"–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞: {account_data.get('error')}")
    
    return InstagramBioManager(account_data, proxy_url)

def quick_bio_change(account_string: str, new_bio: str, proxy_url=None):
    """–ë—ã—Å—Ç—Ä–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏"""
    try:
        manager = create_bio_manager(account_string, proxy_url)
        
        if not manager.login():
            return False
        
        result = manager.change_biography(new_bio)
        return bool(result)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    
    # ‚úÖ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
    ACCOUNT_STRING = "Lorelai.Harrell.M134:lorelai!P7P||android-9e71ad1f7a1316cb;a3d198b5-739d-43c6-8963-43efca20b38d;92dcb9fe-9cfe-4561-8778-9684a7260ed3;92dcb9fe-9cfe-4561-8778-9684a7260ed3|mid=ZwISfAABAAEiQQ4Gdpgj-gFrQCp0;ds_user_id=76044084902;sessionid=76044084902%3ALHu5NnIHDgykl3%3A3%3AAYcaVG-aAyYsKRk4SPJXGPJEthhozGkHjwAy2PZYlA;IG-U-DS-USER-ID=76044084902;Authorization=Bearer IGT:2:eyJkc191c2VyX2lkIjoiNzYwNDQwODQ5MDIiLCJzZXNzaW9uaWQiOiI3NjA0NDA4NDkwMiUzQUxIdTVObklIRGd5a2wzJTNBMyUzQUFZY2FWRy1hQXlZc0tSazRTUEpYR1BKRXRoaG96R2tIandBeTJQWllsQSJ9;||"
    
    CONFIG = {
        "proxy_url": "http://UyBSdD63:rcx9ij7R@193.5.28.171:63686",
        
        # ‚úÖ –ë–ò–û–ì–†–ê–§–ò–ò –î–õ–Ø –ò–ó–ú–ï–ù–ï–ù–ò–Ø
        "single_bio": "facebook.com",
        
        # "batch_bios": [
        #     "üì± –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –º–æ—é —Å—Ç—Ä–∞–Ω–∏—Ü—É! ‚ú®",
        #     "üéØ –î–æ—Å—Ç–∏–≥–∞–µ–º —Ü–µ–ª–µ–π –≤–º–µ—Å—Ç–µ! üí™ #success",
        #     "üíé –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å üöÄ",
        #     "üåü –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏! #updates",
        #     "üî• –ñ–∏–≤–∏ —è—Ä–∫–æ, —Ç–≤–æ—Ä–∏ —Å–º–µ–ª–æ! #inspiration"
        # ]
    }
    
    print("üöÄ Instagram Bio Manager")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
        manager = create_bio_manager(
            ACCOUNT_STRING,
            proxy_url=CONFIG["proxy_url"]
        )
        
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        if not manager.login():
            print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            return
        
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!\n")
        
        # ‚úÖ –í–´–ë–û–† –î–ï–ô–°–¢–í–ò–Ø
        print("üéØ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å")
        print("2. üìù –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é")
        print("3. üîó –ò–∑–º–µ–Ω–∏—Ç—å –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É")
        print("4. üîÑ –ü–∞–∫–µ—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–π")
        print("5. üîß –ò–∑–º–µ–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–π")
        
        try:
            choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
            
            if choice == "1":
                # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å
                print("\nüìñ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è...")
                manager.get_current_profile()
                
            elif choice == "2":
                # –ò–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é
                print("\nüìù –ò–∑–º–µ–Ω—è–µ–º –±–∏–æ–≥—Ä–∞—Ñ–∏—é...")
                result = manager.change_biography(CONFIG["single_bio"])
                if result:
                    print("üéâ –ë–∏–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!")
                
            elif choice == "3":
                # –ò–∑–º–µ–Ω–∏—Ç—å –≤–Ω–µ—à–Ω—é—é —Å—Å—ã–ª–∫—É
                new_url = input("üîó –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É: ").strip()
                if new_url:
                    result = manager.change_external_url(new_url)
                    if result:
                        print("üéâ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!")
                else:
                    print("‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π")
                
            elif choice == "4":
                # –ü–∞–∫–µ—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
                print("\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞–∫–µ—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–π...")
                results = manager.batch_biography_changes(
                    CONFIG["batch_bios"],
                    delay_range=(5, 15)  # –ó–∞–¥–µ—Ä–∂–∫–∞ 5-15 —Å–µ–∫
                )
                success_count = sum(results)
                print(f"üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {success_count}/{len(CONFIG['batch_bios'])} —É—Å–ø–µ—à–Ω–æ!")
                
            elif choice == "5":
                # –ò–∑–º–µ–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–π
                print("\nüîß –ò–∑–º–µ–Ω—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–µ–π –ø—Ä–æ—Ñ–∏–ª—è...")
                
                new_name = input("üë§ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
                new_bio = input("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
                new_url = input("üîó –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É (–∏–ª–∏ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): ").strip()
                
                update_data = {}
                if new_name:
                    update_data['full_name'] = new_name
                if new_bio:
                    update_data['biography'] = new_bio
                if new_url:
                    update_data['external_url'] = new_url
                
                if update_data:
                    result = manager.change_profile_info(**update_data)
                    if result:
                        print("üéâ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
                else:
                    print("‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è")
                
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                
        except KeyboardInterrupt:
            print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
