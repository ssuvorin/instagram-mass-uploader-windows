#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ bulk upload
"""

import os
import sys
import django
from pathlib import Path
import tempfile
import subprocess
import platform

# Add project root to Python path
project_root = Path(__file__).resolve().parent
sys.path.insert(0, str(project_root))

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'instagram_uploader.settings')
django.setup()

from uploader.models import BulkUploadTask, BulkUploadAccount
from instagram_uploader.settings import ALLOWED_HOSTS, PROBLEMATIC_HOSTS
import logging

# Setup logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def check_ffmpeg_installation():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫—É FFmpeg"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ FFmpeg...")
    
    try:
        result = subprocess.run(['ffmpeg', '-version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            version_line = result.stdout.split('\n')[0]
            print(f"‚úÖ FFmpeg —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {version_line}")
            return True
        else:
            print("‚ùå FFmpeg –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return False
    except FileNotFoundError:
        print("‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
        return False
    except subprocess.TimeoutExpired:
        print("‚ùå FFmpeg –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ FFmpeg: {e}")
        return False

def check_temp_directory():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    
    temp_dir = tempfile.gettempdir()
    print(f"üìÇ –í—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
    try:
        test_file = os.path.join(temp_dir, "test_write_permission.tmp")
        with open(test_file, 'w') as f:
            f.write("test")
        os.remove(test_file)
        print("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å: OK")
        return True
    except Exception as e:
        print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å: {e}")
        return False

def check_filename_length():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤"""
    print("\nüìè –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤...")
    
    system = platform.system()
    if system == "Windows":
        print("ü™ü Windows —Å–∏—Å—Ç–µ–º–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞")
        print("‚ö†Ô∏è  Windows –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –¥–ª–∏–Ω—É –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ (260 —Å–∏–º–≤–æ–ª–æ–≤)")
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤")
        return True
    else:
        print("üêß Unix-–ø–æ–¥–æ–±–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞")
        print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–µ")
        return True

def check_allowed_hosts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ALLOWED_HOSTS"""
    print("\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ ALLOWED_HOSTS...")
    
    print(f"üìã –¢–µ–∫—É—â–∏–µ ALLOWED_HOSTS: {len(ALLOWED_HOSTS)} —Ö–æ—Å—Ç–æ–≤")
    print(f"üìã –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ö–æ—Å—Ç—ã: {PROBLEMATIC_HOSTS}")
    
    missing_hosts = []
    for host in PROBLEMATIC_HOSTS:
        if host not in ALLOWED_HOSTS:
            missing_hosts.append(host)
    
    if missing_hosts:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ö–æ—Å—Ç—ã: {missing_hosts}")
        return False
    else:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ö–æ—Å—Ç—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        return True

def check_proxy_configuration():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–∫—Å–∏"""
    print("\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∫—Å–∏...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    proxy_vars = ['HTTP_PROXY', 'HTTPS_PROXY', 'http_proxy', 'https_proxy']
    found_proxy = False
    
    for var in proxy_vars:
        value = os.environ.get(var)
        if value:
            print(f"üîç {var}: {value[:50]}...")
            found_proxy = True
    
    if not found_proxy:
        print("‚ÑπÔ∏è  –ü—Ä–æ–∫—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("‚ÑπÔ∏è  –ü—Ä–æ–∫—Å–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    return True

def check_database_connections():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
        active_tasks = BulkUploadTask.objects.filter(status='RUNNING')
        print(f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {active_tasks.count()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã
        stuck_accounts = BulkUploadAccount.objects.filter(status='RUNNING')
        print(f"‚ö†Ô∏è  –ó–∞–≤–∏—Å—à–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {stuck_accounts.count()}")
        
        if stuck_accounts.exists():
            print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–±—Ä–æ—Å–∏—Ç—å –∑–∞–≤–∏—Å—à–∏–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
            for account in stuck_accounts[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"   - {account.account.username}")
        
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False

def generate_fix_recommendations():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é"""
    print("\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
    print("=" * 50)
    
    print("\n1. üîß FFmpeg –æ—à–∏–±–∫–∏ —Å –¥–ª–∏–Ω–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤:")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ö–µ—à–µ–π –¥–ª—è –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã—Ö –∏–º–µ–Ω")
    
    print("\n2. üîó –ü—Ä–æ–∫—Å–∏ –æ—à–∏–±–∫–∏:")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ProxyError")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ –¥–ª—è –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–æ–∫ (20-60s)")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ RemoteDisconnected")
    
    print("\n3. üåê DisallowedHost –æ—à–∏–±–∫–∏:")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã api.ipify.org, www.shadowserver.org")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω—ã wildcard –¥–æ–º–µ–Ω—ã *.ipify.org, *.shadowserver.org")
    
    print("\n4. üîÑ –£–ª—É—á—à–µ–Ω–Ω–∞—è retry –ª–æ–≥–∏–∫–∞:")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –†–∞–∑–¥–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–∫—Å–∏ –∏ —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏ —Å jitter")
    print("   ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ª–∏–º–∏—Ç—ã –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è")
    
    print("\n5. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:")
    print("   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫")
    print("   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫")
    print("   ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –≠—Ç–æ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç")

def test_file_operations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏...")
    
    temp_dir = tempfile.gettempdir()
    
    # –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –¥–ª–∏–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
    long_name = "test_" + "x" * 200 + ".mp4"
    test_path = os.path.join(temp_dir, long_name)
    
    try:
        with open(test_path, 'w') as f:
            f.write("test")
        os.remove(test_path)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –¥–ª–∏–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º: OK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –¥–ª–∏–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º: {e}")
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∏–º–µ–Ω–µ–º (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    short_name = "test_short.mp4"
    test_path_short = os.path.join(temp_dir, short_name)
    
    try:
        with open(test_path_short, 'w') as f:
            f.write("test")
        os.remove(test_path_short)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∏–º–µ–Ω–µ–º: OK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∏–º–µ–Ω–µ–º: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫ bulk upload")
    print("=" * 60)
    
    checks = [
        check_ffmpeg_installation,
        check_temp_directory,
        check_filename_length,
        check_allowed_hosts,
        check_proxy_configuration,
        check_database_connections,
        test_file_operations
    ]
    
    results = []
    for check in checks:
        try:
            result = check()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ {check.__name__}: {e}")
            results.append(False)
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    generate_fix_recommendations()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    passed = sum(results)
    total = len(results)
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: {passed}/{total}")
    
    if passed == total:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
    else:
        print("‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, –Ω–æ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –ª—É—á—à–µ")
    
    print(f"\nüîß –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:")
    print("   - FFmpeg –æ—à–∏–±–∫–∏ —Å –¥–ª–∏–Ω–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏ —Ñ–∞–π–ª–æ–≤")
    print("   - –ü—Ä–æ–∫—Å–∏ –æ—à–∏–±–∫–∏ –∏ —Å–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
    print("   - DisallowedHost –æ—à–∏–±–∫–∏")
    print("   - –£–ª—É—á—à–µ–Ω–Ω–∞—è retry –ª–æ–≥–∏–∫–∞")

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    
    print("\nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
