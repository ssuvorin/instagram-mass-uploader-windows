#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ FFmpeg –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ Windows
"""

import os
import sys
import subprocess
import shutil
import zipfile
import requests
from pathlib import Path

def find_current_ffmpeg():
    """–ù–∞–π—Ç–∏ —Ç–µ–∫—É—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É FFmpeg"""
    print("üîç –ü–æ–∏—Å–∫ —Ç–µ–∫—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ FFmpeg...")
    
    # –ò—â–µ–º –≤ LOCALAPPDATA
    localappdata = os.environ.get('LOCALAPPDATA', r'C:\Users\{}\AppData\Local'.format(os.getenv('USERNAME', 'Admin')))
    
    try:
        import glob
        ffmpeg_patterns = [
            os.path.join(localappdata, "**", "ffmpeg.exe"),
            os.path.join(localappdata, "**", "bin", "ffmpeg.exe"),
        ]
        
        for pattern in ffmpeg_patterns:
            found_ffmpeg = glob.glob(pattern, recursive=True)
            if found_ffmpeg:
                ffmpeg_path = found_ffmpeg[0]
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω FFmpeg: {ffmpeg_path}")
                return ffmpeg_path
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
    
    return None

def test_ffmpeg(ffmpeg_path):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å FFmpeg"""
    try:
        result = subprocess.run([ffmpeg_path, "-version"], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            version_line = result.stdout.split('\n')[0]
            print(f"‚úÖ FFmpeg —Ä–∞–±–æ—Ç–∞–µ—Ç: {version_line}")
            return True
        else:
            print(f"‚ùå FFmpeg –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è FFmpeg: {e}")
        return False

def create_ffmpeg_directory():
    """–°–æ–∑–¥–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è FFmpeg"""
    ffmpeg_dir = r"C:\ffmpeg"
    bin_dir = os.path.join(ffmpeg_dir, "bin")
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {bin_dir}")
    os.makedirs(bin_dir, exist_ok=True)
    
    return bin_dir

def copy_ffmpeg_files(source_path, target_dir):
    """–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã FFmpeg –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ—Å—Ç–æ"""
    source_dir = os.path.dirname(source_path)
    
    print(f"üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ {source_dir} –≤ {target_dir}")
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    files_to_copy = [
        "ffmpeg.exe",
        "ffprobe.exe", 
        "ffplay.exe",
        "avcodec-*.dll",
        "avdevice-*.dll",
        "avfilter-*.dll",
        "avformat-*.dll",
        "avutil-*.dll",
        "postproc-*.dll",
        "swresample-*.dll",
        "swscale-*.dll"
    ]
    
    copied_files = []
    
    try:
        import glob
        for pattern in files_to_copy:
            files = glob.glob(os.path.join(source_dir, pattern))
            for file in files:
                filename = os.path.basename(file)
                target_file = os.path.join(target_dir, filename)
                shutil.copy2(file, target_file)
                copied_files.append(filename)
                print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {filename}")
        
        return len(copied_files) > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def add_to_path(target_dir):
    """–î–æ–±–∞–≤–∏—Ç—å FFmpeg –≤ PATH"""
    print(f"üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ {target_dir} –≤ PATH...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π PATH
        current_path = os.environ.get('PATH', '')
        
        if target_dir not in current_path:
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
            os.environ['PATH'] = target_dir + os.pathsep + current_path
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π PATH (—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
            try:
                subprocess.run([
                    'setx', 'PATH', f'{target_dir};{current_path}', '/M'
                ], check=True, capture_output=True)
                print("‚úÖ FFmpeg –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π PATH")
            except subprocess.CalledProcessError:
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π PATH (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)")
                print("üí° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ PATH –≤—Ä—É—á–Ω—É—é")
            
            return True
        else:
            print("‚úÖ FFmpeg —É–∂–µ –≤ PATH")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ PATH: {e}")
        return False

def test_installation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º ffmpeg
        result = subprocess.run(['ffmpeg', '-version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("‚úÖ ffmpeg —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ PATH")
        else:
            print("‚ùå ffmpeg –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ PATH")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º ffprobe
        result = subprocess.run(['ffprobe', '-version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("‚úÖ ffprobe —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ PATH")
        else:
            print("‚ùå ffprobe –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ PATH")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ FFmpeg –Ω–∞ Windows")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ù–∞–π—Ç–∏ —Ç–µ–∫—É—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    current_ffmpeg = find_current_ffmpeg()
    if not current_ffmpeg:
        print("‚ùå FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FFmpeg.")
        return 1
    
    # –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if not test_ffmpeg(current_ffmpeg):
        print("‚ùå –¢–µ–∫—É—â–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ FFmpeg –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return 1
    
    # –®–∞–≥ 3: –°–æ–∑–¥–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    target_dir = create_ffmpeg_directory()
    
    # –®–∞–≥ 4: –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã
    if not copy_ffmpeg_files(current_ffmpeg, target_dir):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã FFmpeg!")
        return 1
    
    # –®–∞–≥ 5: –î–æ–±–∞–≤–∏—Ç—å –≤ PATH
    if not add_to_path(target_dir):
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å FFmpeg –≤ PATH!")
        return 1
    
    # –®–∞–≥ 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if test_installation():
        print("\nüéâ FFmpeg —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –º–µ—Å—Ç–æ!")
        print(f"üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {target_dir}")
        print("üí° –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π PATH")
        return 0
    else:
        print("\nüí• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª")
        return 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)
