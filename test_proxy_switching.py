#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã –ø—Ä–æ–∫—Å–∏
"""

import os
import sys
import django
from pathlib import Path

# Add project root to Python path
project_root = Path(__file__).resolve().parent
sys.path.insert(0, str(project_root))

# Setup Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'instagram_uploader.settings')
django.setup()

from uploader.models import InstagramAccount, Proxy
from uploader.proxy_manager import ProxyManager
import logging

# Setup logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_proxy_switching():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–º–µ–Ω—É –ø—Ä–æ–∫—Å–∏"""
    print("üîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ProxyManager
    proxy_manager = ProxyManager()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
    try:
        test_account = InstagramAccount.objects.filter(
            current_proxy__isnull=False
        ).first()
        
        if not test_account:
            print("‚ùå –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–º–∏ –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        print(f"üì± –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç: {test_account.username}")
        print(f"üîó –¢–µ–∫—É—â–∏–π –ø—Ä–æ–∫—Å–∏: {test_account.current_proxy}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–∫—Å–∏
        available_proxies = Proxy.objects.filter(
            status='active',
            is_active=True
        ).exclude(
            id=test_account.current_proxy.id if test_account.current_proxy else None
        )
        
        print(f"üìä –î–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏: {available_proxies.count()}")
        
        if available_proxies.count() == 0:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å–º–µ–Ω—ã")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–∫—Å–∏
        print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–∫—Å–∏...")
        new_proxy = proxy_manager.get_available_proxy(test_account, exclude_blocked=True)
        
        if new_proxy:
            print(f"‚úÖ –ù–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏ –ø–æ–ª—É—á–µ–Ω: {new_proxy.host}:{new_proxy.port}")
            print(f"üåç –°—Ç—Ä–∞–Ω–∞: {new_proxy.country}")
            print(f"üèôÔ∏è –ì–æ—Ä–æ–¥: {new_proxy.city}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–∫—Å–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–º–µ–Ω–∏–ª—Å—è
            test_account.refresh_from_db()
            if test_account.current_proxy == new_proxy:
                print("‚úÖ –ü—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–∫–∫–∞—É–Ω—Ç—É")
            else:
                print("‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –±—ã–ª –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–∫–∫–∞—É–Ω—Ç—É")
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def test_proxy_blocking():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ–∫—Å–∏"""
    print("\nüö´ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    proxy_manager = ProxyManager()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏
        test_proxy = Proxy.objects.filter(status='active').first()
        test_account = InstagramAccount.objects.filter(
            current_proxy__isnull=False
        ).first()
        
        if not test_proxy or not test_account:
            print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")
            return False
        
        print(f"üîó –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏: {test_proxy.host}:{test_proxy.port}")
        print(f"üì± –¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç: {test_account.username}")
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏
        print("\nüö´ –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏...")
        proxy_manager.mark_proxy_blocked(test_proxy, test_account, "test blocking")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        test_proxy.refresh_from_db()
        if test_proxy.status == 'banned':
            print("‚úÖ –ü—Ä–æ–∫—Å–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        else:
            print("‚ùå –ü—Ä–æ–∫—Å–∏ –Ω–µ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è...")
        blocked_proxy = proxy_manager.get_available_proxy(test_account, exclude_blocked=True)
        
        if blocked_proxy and blocked_proxy.id == test_proxy.id:
            print("‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –≤—Å–µ –µ—â–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è")
            return False
        else:
            print("‚úÖ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–∫—Å–∏ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {e}")
        return False

def show_proxy_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∫—Å–∏"""
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    total_proxies = Proxy.objects.count()
    active_proxies = Proxy.objects.filter(status='active', is_active=True).count()
    banned_proxies = Proxy.objects.filter(status='banned').count()
    inactive_proxies = Proxy.objects.filter(status='inactive').count()
    
    print(f"üìà –í—Å–µ–≥–æ –ø—Ä–æ–∫—Å–∏: {total_proxies}")
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_proxies}")
    print(f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: {banned_proxies}")
    print(f"‚è∏Ô∏è –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {inactive_proxies}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º
    print(f"\nüåç –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º:")
    countries = Proxy.objects.filter(status='active').values_list('country', flat=True).distinct()
    for country in countries:
        if country:
            count = Proxy.objects.filter(country=country, status='active').count()
            print(f"   {country}: {count} –ø—Ä–æ–∫—Å–∏")
    
    # –ê–∫–∫–∞—É–Ω—Ç—ã —Å –ø—Ä–æ–∫—Å–∏
    accounts_with_proxy = InstagramAccount.objects.filter(current_proxy__isnull=False).count()
    accounts_without_proxy = InstagramAccount.objects.filter(current_proxy__isnull=True).count()
    
    print(f"\nüë• –ê–∫–∫–∞—É–Ω—Ç—ã:")
    print(f"   –° –ø—Ä–æ–∫—Å–∏: {accounts_with_proxy}")
    print(f"   –ë–µ–∑ –ø—Ä–æ–∫—Å–∏: {accounts_without_proxy}")

def simulate_proxy_error_scenario():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–π —Å –æ—à–∏–±–∫–∞–º–∏ –ø—Ä–æ–∫—Å–∏"""
    print("\nüé≠ –°–∏–º—É–ª—è—Ü–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è —Å –æ—à–∏–±–∫–∞–º–∏ –ø—Ä–æ–∫—Å–∏")
    print("=" * 50)
    
    print("üìã –°—Ü–µ–Ω–∞—Ä–∏–π:")
    print("1. –ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—É—á–∞–µ—Ç ProxyError –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ")
    print("2. –°–∏—Å—Ç–µ–º–∞ –∂–¥–µ—Ç 20-60 —Å–µ–∫—É–Ω–¥")
    print("3. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ - —Å–Ω–æ–≤–∞ ProxyError")
    print("4. –°–∏—Å—Ç–µ–º–∞ –∂–¥–µ—Ç 20-60 —Å–µ–∫—É–Ω–¥")
    print("5. –¢—Ä–µ—Ç—å—è –ø–æ–ø—ã—Ç–∫–∞ - —Å–Ω–æ–≤–∞ ProxyError")
    print("6. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –Ω–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏")
    print("7. –ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Å –Ω–æ–≤—ã–º –ø—Ä–æ–∫—Å–∏")
    
    print("\n‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞:")
    print("   - –°—á–µ—Ç—á–∏–∫ –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–æ–∫ (proxy_error_count)")
    print("   - –ú–∞–∫—Å–∏–º—É–º 3 —Å–º–µ–Ω—ã –ø—Ä–æ–∫—Å–∏ –∑–∞ —Å–µ—Å—Å–∏—é")
    print("   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –ø—Ä–æ–∫—Å–∏ –∏–∑ —Ç–æ–≥–æ –∂–µ —Ä–µ–≥–∏–æ–Ω–∞")
    print("   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏")
    print("   - –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å –Ω–æ–≤—ã–º –ø—Ä–æ–∫—Å–∏")
    
    print("\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print("   - –ü–µ—Ä–≤—ã–µ 2 –æ—à–∏–±–∫–∏: –æ–±—ã—á–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (20-60s –æ–∂–∏–¥–∞–Ω–∏–µ)")
    print("   - 3-—è –æ—à–∏–±–∫–∞: —Å–º–µ–Ω–∞ –ø—Ä–æ–∫—Å–∏ + –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ (10-20s)")
    print("   - –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏: –¥–ª–∏–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ (30-60s)")
    print("   - –û—à–∏–±–∫–∞ —Å–º–µ–Ω—ã –ø—Ä–æ–∫—Å–∏: fallback –∫ –æ–±—ã—á–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã –ø—Ä–æ–∫—Å–∏")
    print("=" * 60)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_proxy_statistics()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–º–µ–Ω—É –ø—Ä–æ–∫—Å–∏
    switch_success = test_proxy_switching()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –ø—Ä–æ–∫—Å–∏
    block_success = test_proxy_blocking()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
    simulate_proxy_error_scenario()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"‚úÖ –°–º–µ–Ω–∞ –ø—Ä–æ–∫—Å–∏: {'–ü–†–û–ô–î–ï–ù–û' if switch_success else '–ü–†–û–í–ê–õ–ï–ù–û'}")
    print(f"‚úÖ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–∫—Å–∏: {'–ü–†–û–ô–î–ï–ù–û' if block_success else '–ü–†–û–í–ê–õ–ï–ù–û'}")
    
    if switch_success and block_success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ –ø—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–∫—Å–∏ –æ—à–∏–±–æ–∫")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
    
    print(f"\nüîß –†–ï–ê–õ–ò–ó–û–í–ê–ù–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
    print("   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ –ø—Ä–æ–∫—Å–∏ –ø—Ä–∏ 3+ –æ—à–∏–±–∫–∞—Ö")
    print("   - –ü–æ–∏—Å–∫ –ø—Ä–æ–∫—Å–∏ –∏–∑ —Ç–æ–≥–æ –∂–µ —Ä–µ–≥–∏–æ–Ω–∞")
    print("   - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø—Ä–æ–∫—Å–∏")
    print("   - –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å –Ω–æ–≤—ã–º –ø—Ä–æ–∫—Å–∏")
    print("   - –£–º–Ω–∞—è retry –ª–æ–≥–∏–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏")
    print("   - –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–º–µ–Ω—ã")

if __name__ == "__main__":
    try:
        main()
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
